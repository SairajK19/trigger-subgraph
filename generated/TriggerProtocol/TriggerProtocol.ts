// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NFTminted extends ethereum.Event {
  get params(): NFTminted__Params {
    return new NFTminted__Params(this);
  }
}

export class NFTminted__Params {
  _event: NFTminted;

  constructor(event: NFTminted) {
    this._event = event;
  }

  get portalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenURI(): string {
    return this._event.parameters[2].value.toString();
  }

  get mintedBy(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get currentOwner(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get previousOwner(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get forSale(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }

  get price(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }
}

export class PortalCreated extends ethereum.Event {
  get params(): PortalCreated__Params {
    return new PortalCreated__Params(this);
  }
}

export class PortalCreated__Params {
  _event: PortalCreated;

  constructor(event: PortalCreated) {
    this._event = event;
  }

  get dbThreadID(): string {
    return this._event.parameters[0].value.toString();
  }

  get appID(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get createdAt(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get createdBy(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get portalId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class PortalJoined extends ethereum.Event {
  get params(): PortalJoined__Params {
    return new PortalJoined__Params(this);
  }
}

export class PortalJoined__Params {
  _event: PortalJoined;

  constructor(event: PortalJoined) {
    this._event = event;
  }

  get portalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get joiner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PortalXPClaimed extends ethereum.Event {
  get params(): PortalXPClaimed__Params {
    return new PortalXPClaimed__Params(this);
  }
}

export class PortalXPClaimed__Params {
  _event: PortalXPClaimed;

  constructor(event: PortalXPClaimed) {
    this._event = event;
  }

  get portalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get claimer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Staked extends ethereum.Event {
  get params(): Staked__Params {
    return new Staked__Params(this);
  }
}

export class Staked__Params {
  _event: Staked;

  constructor(event: Staked) {
    this._event = event;
  }

  get portalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get staker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class TriggerProtocol extends ethereum.SmartContract {
  static bind(address: Address): TriggerProtocol {
    return new TriggerProtocol("TriggerProtocol", address);
  }

  triggerNFTtokenFactory(): Address {
    let result = super.call(
      "triggerNFTtokenFactory",
      "triggerNFTtokenFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_triggerNFTtokenFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "triggerNFTtokenFactory",
      "triggerNFTtokenFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  triggerTokenFactory(): Address {
    let result = super.call(
      "triggerTokenFactory",
      "triggerTokenFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_triggerTokenFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "triggerTokenFactory",
      "triggerTokenFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  triggerXpTokenFactory(): Address {
    let result = super.call(
      "triggerXpTokenFactory",
      "triggerXpTokenFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_triggerXpTokenFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "triggerXpTokenFactory",
      "triggerXpTokenFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyNftCall extends ethereum.Call {
  get inputs(): BuyNftCall__Inputs {
    return new BuyNftCall__Inputs(this);
  }

  get outputs(): BuyNftCall__Outputs {
    return new BuyNftCall__Outputs(this);
  }
}

export class BuyNftCall__Inputs {
  _call: BuyNftCall;

  constructor(call: BuyNftCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BuyNftCall__Outputs {
  _call: BuyNftCall;

  constructor(call: BuyNftCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }

  get _portalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClaimXpTokenCall extends ethereum.Call {
  get inputs(): ClaimXpTokenCall__Inputs {
    return new ClaimXpTokenCall__Inputs(this);
  }

  get outputs(): ClaimXpTokenCall__Outputs {
    return new ClaimXpTokenCall__Outputs(this);
  }
}

export class ClaimXpTokenCall__Inputs {
  _call: ClaimXpTokenCall;

  constructor(call: ClaimXpTokenCall) {
    this._call = call;
  }

  get _portalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ClaimXpTokenCall__Outputs {
  _call: ClaimXpTokenCall;

  constructor(call: ClaimXpTokenCall) {
    this._call = call;
  }
}

export class CreatePortalCall extends ethereum.Call {
  get inputs(): CreatePortalCall__Inputs {
    return new CreatePortalCall__Inputs(this);
  }

  get outputs(): CreatePortalCall__Outputs {
    return new CreatePortalCall__Outputs(this);
  }
}

export class CreatePortalCall__Inputs {
  _call: CreatePortalCall;

  constructor(call: CreatePortalCall) {
    this._call = call;
  }

  get _dbThreadID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _appID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CreatePortalCall__Outputs {
  _call: CreatePortalCall;

  constructor(call: CreatePortalCall) {
    this._call = call;
  }
}

export class JoinPortalCall extends ethereum.Call {
  get inputs(): JoinPortalCall__Inputs {
    return new JoinPortalCall__Inputs(this);
  }

  get outputs(): JoinPortalCall__Outputs {
    return new JoinPortalCall__Outputs(this);
  }
}

export class JoinPortalCall__Inputs {
  _call: JoinPortalCall;

  constructor(call: JoinPortalCall) {
    this._call = call;
  }

  get _portalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class JoinPortalCall__Outputs {
  _call: JoinPortalCall;

  constructor(call: JoinPortalCall) {
    this._call = call;
  }
}

export class MintTokenCall extends ethereum.Call {
  get inputs(): MintTokenCall__Inputs {
    return new MintTokenCall__Inputs(this);
  }

  get outputs(): MintTokenCall__Outputs {
    return new MintTokenCall__Outputs(this);
  }
}

export class MintTokenCall__Inputs {
  _call: MintTokenCall;

  constructor(call: MintTokenCall) {
    this._call = call;
  }

  get _portalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenURI(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class MintTokenCall__Outputs {
  _call: MintTokenCall;

  constructor(call: MintTokenCall) {
    this._call = call;
  }
}

export class SetFactoryAddressesCall extends ethereum.Call {
  get inputs(): SetFactoryAddressesCall__Inputs {
    return new SetFactoryAddressesCall__Inputs(this);
  }

  get outputs(): SetFactoryAddressesCall__Outputs {
    return new SetFactoryAddressesCall__Outputs(this);
  }
}

export class SetFactoryAddressesCall__Inputs {
  _call: SetFactoryAddressesCall;

  constructor(call: SetFactoryAddressesCall) {
    this._call = call;
  }

  get _triggerTokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _triggerXpTokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _triggerNFTokenAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SetFactoryAddressesCall__Outputs {
  _call: SetFactoryAddressesCall;

  constructor(call: SetFactoryAddressesCall) {
    this._call = call;
  }
}

export class StakeCall extends ethereum.Call {
  get inputs(): StakeCall__Inputs {
    return new StakeCall__Inputs(this);
  }

  get outputs(): StakeCall__Outputs {
    return new StakeCall__Outputs(this);
  }
}

export class StakeCall__Inputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }

  get _portalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StakeCall__Outputs {
  _call: StakeCall;

  constructor(call: StakeCall) {
    this._call = call;
  }
}

export class ToggleSaleCall extends ethereum.Call {
  get inputs(): ToggleSaleCall__Inputs {
    return new ToggleSaleCall__Inputs(this);
  }

  get outputs(): ToggleSaleCall__Outputs {
    return new ToggleSaleCall__Outputs(this);
  }
}

export class ToggleSaleCall__Inputs {
  _call: ToggleSaleCall;

  constructor(call: ToggleSaleCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ToggleSaleCall__Outputs {
  _call: ToggleSaleCall;

  constructor(call: ToggleSaleCall) {
    this._call = call;
  }
}

export class UpdateListingPriceCall extends ethereum.Call {
  get inputs(): UpdateListingPriceCall__Inputs {
    return new UpdateListingPriceCall__Inputs(this);
  }

  get outputs(): UpdateListingPriceCall__Outputs {
    return new UpdateListingPriceCall__Outputs(this);
  }
}

export class UpdateListingPriceCall__Inputs {
  _call: UpdateListingPriceCall;

  constructor(call: UpdateListingPriceCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateListingPriceCall__Outputs {
  _call: UpdateListingPriceCall;

  constructor(call: UpdateListingPriceCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _portalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
